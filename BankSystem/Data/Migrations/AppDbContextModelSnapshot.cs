// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Models.BankAccount", b =>
                {
                    b.Property<long>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<string>("OwnerAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AccountId");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1L,
                            AccountType = "Checking",
                            Balance = 1000.0,
                            OwnerAddress = "17 Nguyen Tri Phuong St.",
                            OwnerName = "Huy Huong",
                            OwnerPhone = "0914398183",
                            Password = "123456"
                        },
                        new
                        {
                            AccountId = 2L,
                            AccountType = "Checking",
                            Balance = 2000.0,
                            OwnerAddress = "18 Nguyen Tri Phuong St.",
                            OwnerName = "Quan Hoang",
                            OwnerPhone = "0914398184",
                            Password = "123456"
                        },
                        new
                        {
                            AccountId = 3L,
                            AccountType = "Checking",
                            Balance = 3000.0,
                            OwnerAddress = "19 Nguyen Tri Phuong St.",
                            OwnerName = "Quang Tran",
                            OwnerPhone = "0914398185",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("Models.Transaction", b =>
                {
                    b.Property<Guid>("TransId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActionDesc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HappenedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TransId");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Models.Transaction", b =>
                {
                    b.HasOne("Models.BankAccount", "BankAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("Models.BankAccount", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
